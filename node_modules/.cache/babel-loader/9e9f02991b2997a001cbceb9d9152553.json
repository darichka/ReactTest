{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/job/projects/React/test-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nfunction User(props) {\n  return React.createElement(\"tr\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \" \", props.user.id, \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \" \", props.user.firstName, \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" \", props.user.lastName, \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" \", props.user.dob.slice(0, 10), \" \"));\n}\n\nfunction Month(props) {\n  console.log(props.month.name);\n  return React.createElement(\"div\", {\n    className: \"monthName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.month.name + '  ' + props.month.count);\n}\n\nfunction devideByMonthes(users) {\n  let monthes = [];\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  users.forEach(user => {\n    let e = false;\n    let dateOfBirth = new Date(user.dob);\n\n    for (let i = 0; i < monthes.length - 1; i++) {\n      if (monthNames[dateOfBirth.getMonth()] == monthes[i].name) {\n        addUserToMonth(monthes[i], user);\n        e = true;\n        break;\n      }\n    }\n\n    if (!e) {\n      let newMonth = {\n        name: monthNames[dateOfBirth.getMonth()],\n        count: 1,\n        users: [user]\n      };\n      monthes.push(newMonth);\n    } // if(monthNames[dateOfBirth.getMonth()] in monthes){\n    //   addUserToMonth(monthes[monthNames[dateOfBirth.getMonth()]], user);\n    // }\n    // else{\n    //   monthes[monthNames[dateOfBirth.getMonth()]] = {\n    //     name: monthNames[dateOfBirth.getMonth()],\n    //     count: 1,\n    //     users: [user]\n    //   }\n    // }\n\n  });\n  return monthes;\n}\n\nfunction addUserToMonth(month, user) {\n  month.count++;\n  month.users.push(user);\n  console.log(\"Month: \" + month.name + \"  Count: \" + month.count + \"  Users: \" + month.users.length);\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      monthes: []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'https://yalantis-react-school.herokuapp.com/api/task0/users';\n    fetch(url).then(result => result.json()).then(result => {\n      this.setState({\n        users: result\n      });\n      this.state.monthes = devideByMonthes(result);\n      console.log(this.state.monthes.length);\n    });\n  }\n\n  renderUsers() {\n    return this.state.users.map(user => {\n      return React.createElement(User, {\n        user: user,\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    });\n  }\n\n  renderMonthes() {\n    console.log(this.state.monthes[0]);\n    return this.state.monthes.map(month => {\n      return React.createElement(Month, {\n        month: month,\n        key: month.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return (// <table>\n      //     <thead>\n      //       <tr>\n      //         <th>ID</th>\n      //         <th>firstName</th>\n      //         <th>lastName</th>\n      //         <th>dob</th>\n      //       </tr>\n      //     </thead>\n      //     <tbody>\n      //     { \n      //     this.renderUsers()\n      //     }\n      //     </tbody>\n      // </table>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.renderMonthes())\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a/Desktop/job/projects/React/test-app/src/App.js"],"names":["React","Component","User","props","user","id","firstName","lastName","dob","slice","Month","console","log","month","name","count","devideByMonthes","users","monthes","monthNames","forEach","e","dateOfBirth","Date","i","length","getMonth","addUserToMonth","newMonth","push","App","state","componentDidMount","url","fetch","then","result","json","setState","renderUsers","map","renderMonthes","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\n\n\nfunction User(props){\n  return(\n      <tr className=\"row\">\n          <td> {props.user.id} </td>\n          <td> {props.user.firstName} </td>\n          <td> {props.user.lastName} </td>\n          <td> { props.user.dob.slice(0,10)} </td>\n      </tr>\n  )\n}\n\nfunction Month(props){\n  console.log(props.month.name)\n  return(\n    <div className=\"monthName\">\n      {props.month.name + '  ' + props.month.count }\n    </div>\n  )\n}\n\nfunction devideByMonthes(users){\n  let monthes = [];\n\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n  users.forEach(user => {\n    let e = false;\n    let dateOfBirth = new Date(user.dob);\n    for(let i = 0; i < monthes.length - 1; i++ ){\n      if(monthNames[dateOfBirth.getMonth()] == monthes[i].name){\n        addUserToMonth(monthes[i], user);\n        e = true;\n        break;\n      }\n    }\n    if(!e) {\n      let newMonth = {\n        name: monthNames[dateOfBirth.getMonth()],\n        count: 1,\n        users: [user]\n      }\n      monthes.push(newMonth); \n    }\n    \n\n    // if(monthNames[dateOfBirth.getMonth()] in monthes){\n    //   addUserToMonth(monthes[monthNames[dateOfBirth.getMonth()]], user);\n    // }\n    // else{\n    //   monthes[monthNames[dateOfBirth.getMonth()]] = {\n    //     name: monthNames[dateOfBirth.getMonth()],\n    //     count: 1,\n    //     users: [user]\n    //   }\n    // }\n  });\n  return monthes;\n}\n\nfunction addUserToMonth(month, user){\n  month.count++;\n  month.users.push(user);\n  console.log(\"Month: \" + month.name + \"  Count: \" + month.count + \"  Users: \" + month.users.length);\n}\n\nclass App extends Component {\n  state = {\n      users: [], \n      monthes: []\n  }\n\n  componentDidMount() {\n      const url = 'https://yalantis-react-school.herokuapp.com/api/task0/users'\n      \n        fetch(url)\n        .then(result => result.json())\n        .then(result => {\n          this.setState({\n            users: result,\n          });\n          this.state.monthes = devideByMonthes(result);\n          console.log(this.state.monthes.length)\n        })\n    }\n\n    renderUsers(){\n      return (this.state.users.map( user => {\n        return(\n            <User user={user} key={user.id} />\n        )})\n      )\n    }\n\n    renderMonthes(){\n      console.log(this.state.monthes[0])\n      return(this.state.monthes.map(month =>{\n        return (\n          <Month month={month} key={month.name}/>\n        )\n      }))\n    }\n\n  render() {\n      return(\n        // <table>\n        //     <thead>\n        //       <tr>\n        //         <th>ID</th>\n        //         <th>firstName</th>\n        //         <th>lastName</th>\n        //         <th>dob</th>\n        //       </tr>\n        //     </thead>\n        //     <tbody>\n        //     { \n        //     this.renderUsers()\n        //     }\n        //     </tbody>\n            \n        // </table>\n        <div>\n          {\n            this.renderMonthes()\n          }\n        </div>\n     ) \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}